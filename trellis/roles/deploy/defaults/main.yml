# If you use the "git" strategy:
# - you must set a repository (no default)
project_git_repo: "{{ project.repo }}"
# - you can set the git ref to deploy (can be a branch, tag or commit hash)
project_version: "{{ project.branch | default('master') }}"

# The source_path is used to fetch the tags from git, or synchronise via rsync. This way
# you do not have to download/sync the entire project on every deploy
project_source_path: "{{ project_root }}/shared/source"

# There are certain folders you'll want to copy from release to release to speed up deploys.
# Examples: Composer's `vendor` folder, npm's `node_modules`.
# These should not be part of project_shared_children since dependencies need to be atomic and tied to a deploy.
project_copy_folders:
  - vendor

# All the templates to process on the remote system on deploy. These could contain config files.
# `src` and `dest` paths work the same as project_local_files.
project_templates:
  - name: .env config
    src: roles/deploy/templates/env.j2
    dest: .env

# The shared_children is a list of all files/folders in your project that need to be linked to a path in "/shared".
# For example a sessions directory or an uploads folder. They are created if they don't exist, with the type
# specified in the `type` key (file or directory).
# Example:
# project_shared_children:
#   - path: "app/sessions"
#     src: "sessions"
#     mode: "0755"
#     type: "file" / "directory"  // <- optional, defaults to "directory"
project_shared_children:
  - path: web/app/uploads
    src: uploads

# The project_environment is a list of environment variables that can be used in hooks
# Example:
# project_environment:
#   WP_ENV: "production"
project_environment:
  WP_ENV: "{{ env }}"

# The project_current_path is the symlink used for the latest or active deployment
# - default is 'current'
project_current_path: "{{ project.current_path | default('current') }}"
